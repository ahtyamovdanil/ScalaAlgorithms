1. Симпатичное дерево
Марина очень любит решать алгоритмические задачи. Так же ей нравится, когда все аккуратно и красиво.
Однажды, когда она изучала бинарные деревья поиска (BST), ей захотелось красиво распечатать дерево,
содержащее целые числа. Марина знает, что в BST первый добавленный элемент становится корнем дерева.
Все элементы меньше корня добавляются в левое поддерево, а большие в правое. Элементы, равные уже присутствующим,
в дерево не добавляются. Помогите Марине написать программу, которая распечатывает дерево в нужном формате.

Входные данные:
В первой строке входного файла содержится одно число N (1 ≤ N ≤ 10000). Это количество чисел, содержащихся в дереве.
Далее следуют сами числа V (1 ≤ V ≤ 1000) по одному в каждой строке в порядке добавления в дерево.

Выходные данные:
Вывод программы должен быть набором из R строк, пронумерованных от 0 до R-1,
длина каждой из которых равна Ci (0 ≤ i < R). Каждая строка должна заканчиваться символом перевода строки.
В строке с номером i должны быть расположены числа, которые находятся на расстоянии i от корня.
Пусть C_max — длина наибольшей строки, тогда для каждого j (0 ≤ j ≤ Cmax-2) должно быть верно,
что в столбце с этим номером находится ровно одна цифра. Каждый элемент дерева должен быть выведен
справа от его левого поддерева и слева от его правого.


2. Потерявшийся пионер
В детском лагере переполох. Пионер Вася пошел гулять по лабиринту и вот уже долгое время не выходит оттуда.
Ясно, что Вася заблудился. Вася начитанный мальчик и знает, что из лабиринта можно выбраться, если на развилках
всегда поворачивать в одну и ту же сторону. Лабиринт представляет собой маленькие пронумерованные площадки и один
или два перехода на соседние площадки. У лабиринта один вход и не менее одного выхода.

Более строго: лабиринт представляет ориентированый граф такой, что из каждой вершины выходит не более 2-х ребер.
Причем, если из вершины выходит 2 ребра, одно из них называется левым, а другое — правым. Вершины пронумерованы
числами от 0 до N - 1. Вершина с номером 0 является единственным входом в лабиринт. Существует хотя бы одна вершина,
из которой не выходит ребер. Такая вершина называется выходом из лабиринта.

То, что Вася все еще не вышел из лабиринта, значит, что он ходит по лабиринту по кругу. Распечатайте в порядке
возрастания номера площадок по которым кругами ходит пионер.

Входные данные:
В первой строке входного файла содержится одна буква обозначающая сторону, которой придерживается Вася.
l — лево или r — право. В следующей строке содержится число N (1 ≤ N ≤ 10000) — число площадок в лабиринте.
Следующие N строк содержат описание лабиринта, i-я из них описывает переходы из i-й площадки и содержит 1 или 2 числа.
Если дано 2 числа l, r (0 ≤ l, r ≤ N - 1), то l — соседняя вершина, если пойти налево, а r — направо.
Если же дано 1 число v (0 ≤ v ≤ N - 1), то из этой вершины есть ровно один переход в вершину с номером v.
Если v = -1, то эта вершина является выходом из лабиринта.

Выходные данные:
В случае, если пионер не заблудился, выведите "no" (без кавычек). В противном случае выведите упорядоченный
по возрастанию список номеров площадок.


3. Домофон

Последнее время на подъездах в Нижнем Новгороде стало популярно ставить домофоны.
Домофон представляет собой цифровую клавиатуру, на которой посетитель должен набрать номер
нужной ему квартиры и нажать клавишу вызова, после чего жители этой квартиры могут открыть ему
дверь (а могут и не открыть). При интенсивном использовании домофона краска, нанесённая на цифровые клавиши,
постепенно стирается. Одна из компаний, занимающихся установкой домофонов, заинтересовалась возможностью
определить диапазон номеров квартир, расположенных в подъезде, по тому, насколько стёрлась краска с клавиш.
Они уже обнаружили, что по состоянию клавиши можно определить, сколько раз эту клавишу нажимали. Теперь вам,
программисту этой компании, поручили для начала решить простейший вариант задачи восстановления диапазона квартир
по «затёртостям». А именно, вашей программе на вход даются 10 чисел — "затёртости" клавиш 0, 1, ..., 9, 
т. е. количество раз, которое нажималась соответствующая клавиша. Считая, что за время использования домофона каждую
квартиру набрали ровно один раз, и считая, что номера квартир в подъезде начинаются с 1 (т. е. в подъезде расположены
квартиры с номерами 1, 2, ...,N при некотором N), определите диапазон квартир в этом подъезде
(т. е., фактически, определите это N). Считайте, что посетители никогда не набирают ведущих нулей.
Считайте, что N не может превосходить 109.

Входные данные:
На первой строке входного файла находятся 10 чисел затёртости цифр 0,...1,...,9.
Все затёртости не превышают 10^9; гарантируется, что есть хотя бы одна ненулевая затёртость.

Выходные данные:
В выходной файл выведите одно число N. Если подходящего набора диапазона квартир не существует,
выведите одно число -1. Если подходящих N существует несколько, выведите любое. Гарантируется, что, если
искомое N существует, то оно не превосходит 109.
